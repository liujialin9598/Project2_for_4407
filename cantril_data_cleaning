#/bin/bash

# Check if correct number of arguments are provided
if [ "$#" -ne 3 ]; then
    echo "Usage: $0 file1.tsv file2.tsv file3.tsv" >&2
    exit 1
fi


#Based on the header (i.e. top) line, make sure that the file is a tab-separated format file
for file in "$@"
do
    head -n 1 "$file" | grep -q $'\t'

    if [[ $? -ne 0 ]]
    then
        echo "$file not tab"
        exit 1
    fi
	#Also based on the header line, report any lines that do not have the same number of cells. (Cells are allowed be empty.)
	head_cells_number=$(head -n1 $file | gawk -F'\t' '{print NF}')
	tail -n +2 $file | gawk -F '\t' -v hcelnum=$head_cells_number ' NF != hcelnum {print "'"$file"' : line",NR+1,"has different number of cells"}'
done

# sort files 
sort_file(){
	awk 'BEGIN{FS=OFS="\t"}NR==1 {print; next}{print $0 | "sort -k1,1 -k3,3" }' $1 
}

sort_file $1 > sort_file1.tsv
sort_file $2 > sort_file2.tsv
sort_file $3 > sort_file3.tsv

data=$(awk 'BEGIN{FS=OFS="\t"} NR==FNR{arr[$1,$3]=substr($0, index($0,$3)); next} {print $0, arr[$1,$3]}' "sort_file1.tsv" "sort_file2.tsv" | \
awk 'BEGIN{FS=OFS="\t"} NR==FNR{arr[$1,$3]=substr($0, index($0,$3)); next} {print $0, arr[$1,$3]}' "sort_file3.tsv" - )

rm sort_file1.tsv sort_file2.tsv sort_file3.tsv

echo $data > data.tsv

#Remove the column with header Continent, which is sparsely populated and is not present in one of the files.
data=$(echo "$data" |gawk -F '\t' '
NR==1{
	for(i=1;i<=NF;i++)
	{
		if (tolower($i) =="continent")
		{
			continentId=i
		}else{
			arr[++j] = i
		}
	}
}
{
	for (k=1;k<=j;k++){
		printf "%s%s", $arr[k], (k==j?"\n":"\t")
	}
}')

#Ignore the rows that do not represent countries (the country code field is empty)
data=$(echo "$data"| gawk -F"\t" '
NR==1{
	for(i=1; i<=NF;i++)
	{
		if (tolower($i)=="code"){
			countryId=i
		}
	}
}
$countryId!=""
')

#Ignore the rows for years outside those for which we have at least some Cantril data as that is what we will be using. In practice, this means only include years from 2011 to 2021, inclusive.
data=$(echo "$data"| gawk -F"\t" '
NR==1{
	for(i=1; i<=NF;i++)
	{
		if (tolower($i)=="year"){
			yearId=i
		}
	}
	{print}
}
$yearId>=2011&&$yearId<=2021
')

#sort data
data=$(echo "$data" | gawk -F"\t" '
NR==1{	
	print ; next
}
{
	print $0 | "sort -k1,1 -k3,3"
}
')


# output 
data=$(echo "$data"| gawk -F"\t" '
NR==1{
	for(i=1; i<=NF;i++)
	{
		if (tolower($i)=="year"){arr[3]=i}
		else if (tolower($i)=="code") {arr[2]=i}
		else if (tolower($i)=="entity" || tolower($i)=="country" ) {arr[1]=i}
		else if (tolower($i)=="cantril ladder score") {arr[8]=i}
		else if (index(tolower($i),"\"gdp per capita, ppp (constant 2017 international $)\"")>0) {arr[4] = i}
		else if (index(tolower($i),"life expectancy - sex: all - age: at birth - variant: estimates")>0){arr[7]=i}
		else if (tolower($i)=="population (historical estimates)") {arr[5]=i}
		else if (tolower($i)=="\"homicide rate per 100,000 population - both sexes - all ages\"") {arr[6]=i}
	}
}
{
	for(i=1;i<=8;i++){
		if(arr[i]==""){
			continue
		}else{
			printf "%s\t",$arr[i]
		}
		if(i==8){
			printf "\n"
		} 
	}
}
')

echo "$data" > simple2.tsv
